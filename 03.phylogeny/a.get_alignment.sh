#/bin/bash 
#######bin path
scriptp=`dirname "$(realpath $0)"`
binpath="$scriptp/bin"
#########
#follow script download from https://github.com/xiangyupan/phylogenetic-analysis-and-demographic-history-reconstruction.git
#01.convertMaf2List.pl 

###Raw input
inputmafp=$1 #the MAF file which had been generated by 02.AlignmentLAST/b.LAST_muiltz.sh 
refaifile=$2 # Reference fai file 

##########

#########step1 cover alignmnet to list
mkdir colinear
cat $inputmafp |while read line
do
    name=`basename $inputmafp|awk -F "." '{print $1}'`
    perl 01.convertMaf2List.pl $line $colinear/$name  
done

#### step2
mkdir chrwindows
mkdir seq
ls colinear/*.lst |while read line 
do
    chrID=`basename $line|awk -F "." '{print $1}'`
    grep -w $chrID $refaifile ||awk -F " " '{print "chr"$1"_1_"$2}' >chrwindows/$chrID.stat.out.filter
    Length=`grep -w $chrID $refaifile|awk -F " " '{print $2}'`
    python $inputmafp/catch_seq.py chrwindows/$chrID.stat.out.filter $line $Length
done

#### step3 filter gap 
mkdir seq/ungap
for f in seq/genes/*.fa
do
    name=`basename $f |awk -F "." '{print $1}'`
    trimal -in $f -out $seq/ungap/$name.filtergap.fa -nogaps 
done
python merge.py 

####step4 stat alignment 
mkdir stat_1k
for f un seq/genes/*.fa 
do
    bas=`basename $f|awk -F "." '{print $1}'` 
    python $binpath/StatAlignment.py 1000 $bas
done

#####filter alignment
for f in stat_1k/*.stat.out
do
    basen=`basename $f`
    out=$basen.filter
    python $binpath/Filter_alignment.py $f ../species.txt 0.8 $out
done
cat *.filter >all.kept.txt
rm -rf *.filter
awk '{print $1}' all.kept.txt >Seed.list
